"use strict";(self.webpackChunk_robby_rabbitman_ngx=self.webpackChunk_robby_rabbitman_ngx||[]).push([[797],{"./libs/common/src/icon/svg-icon.directive.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Custom:()=>Custom,default:()=>svg_icon_directive_stories});var _class,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),skip=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/skip.js"),first=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/operators/first.js"),rxjs_interop=__webpack_require__("./node_modules/@angular/core/fesm2022/rxjs-interop.mjs"),Observable=__webpack_require__("./node_modules/rxjs/dist/esm5/internal/Observable.js");const resized=element=>new Observable.y((subscriber=>{const observer=new ResizeObserver((entries=>subscriber.next(entries.at(0))));return observer.observe(element),()=>observer.disconnect()})),RESIZED=new core.InjectionToken("NGX Resized");let Resized=((_class=class Resized{constructor(){this.resized$=(()=>{const cdr=(0,core.inject)(core.ChangeDetectorRef),resized$=new core.EventEmitter;return(0,core.inject)(RESIZED).pipe((0,rxjs_interop.sL)()).subscribe({next:entry=>{resized$.emit(entry),cdr.detectChanges()}}),resized$})()}}).propDecorators={resized$:[{type:core.Output,args:["ngxResized"]}]},_class);var svg_icon_directive_class;Resized=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[ngxResized]",standalone:!0,providers:[{provide:RESIZED,useFactory:()=>resized((0,core.inject)(core.ElementRef).nativeElement)}]})],Resized);let IconSprites=class IconSprites{constructor(){this.sprites=new Map,this.register=sprite=>this.sprites.set(sprite.name,sprite),this.get=name=>this.sprites.get(name)}};IconSprites=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],IconSprites);let SvgIcon=((svg_icon_directive_class=class SvgIcon{constructor(){this._element=(0,core.inject)(core.ElementRef).nativeElement,this._sprites=(0,core.inject)(IconSprites),this.icon=(0,core.signal)(void 0),this.sprite=(0,core.signal)(void 0),this._renderEffect=(0,core.effect)((()=>{const sprite=this.sprite();this._render(this._element,this.icon(),null!=sprite?this._sprites.get(sprite):void 0)})),this._render=(()=>{let classes=[];return(element,icon,sprite)=>{if(element.replaceChildren(),element.classList.remove(...classes),null!=icon&&null!=sprite){const useElement=document.createElementNS(element.namespaceURI,"use");null!=sprite.classes&&element.classList.add(...classes=sprite.classes(icon)),useElement.setAttribute("href",sprite.path(icon)),resized(useElement).pipe((0,skip.T)(1),(0,first.P)()).subscribe({next:({contentRect})=>element.setAttribute("viewBox",`0 0 ${contentRect.width} ${contentRect.height}`)}),element.appendChild(useElement)}}})()}set _icon(icon){this.icon.set(icon)}set _sprite(sprite){this.sprite.set(sprite)}}).propDecorators={_icon:[{type:core.Input,args:["ngxSvgIcon"]}],_sprite:[{type:core.Input,args:["sprite"]}]},svg_icon_directive_class);var svg_icon_directive_stories_class;SvgIcon=(0,tslib_es6.gn)([(0,core.Directive)({selector:"svg[ngxSvgIcon]",standalone:!0})],SvgIcon);let FontAwesomeIcon=((svg_icon_directive_stories_class=class FontAwesomeIcon{constructor(){this.svg=(0,core.inject)(SvgIcon),this.type="regular"}set type(type){this.svg.sprite.set(`fa-${type}`)}}).ctorParameters=()=>[],svg_icon_directive_stories_class.propDecorators={type:[{type:core.Input}]},svg_icon_directive_stories_class);FontAwesomeIcon=(0,tslib_es6.gn)([(0,core.Directive)({standalone:!0,selector:"svg[faIcon]",hostDirectives:[{directive:SvgIcon,inputs:["ngxSvgIcon:faIcon"]}]}),(0,tslib_es6.w6)("design:paramtypes",[])],FontAwesomeIcon);const svg_icon_directive_stories={title:"Common/SVG Icon",decorators:[(0,dist.applicationConfig)({providers:[((...sprites)=>({provide:core.ENVIRONMENT_INITIALIZER,multi:!0,useFactory:()=>{const service=(0,core.inject)(IconSprites);return()=>sprites.forEach((sprite=>service.register(sprite)))}}))({name:"fa-solid",path:icon=>`assets/icons/font-awesome-solid.svg#${icon}`},{name:"fa-regular",path:icon=>`assets/icons/font-awesome-regular.svg#${icon}`})]}),(0,dist.moduleMetadata)({imports:[SvgIcon,FontAwesomeIcon]})],argTypes:{icon:{control:{type:"text"}}},args:{icon:"newspaper"}},Basic={argTypes:{sprite:{options:["fa-regular","fa-solid"],control:{type:"select"}}},args:{sprite:"fa-solid"},render:args=>({props:args,template:'<svg [ngxSvgIcon]="icon" [sprite]="sprite" height="1em"></svg>'})},Custom={argTypes:{type:{options:["regular","solid"],control:{type:"select"}}},args:{type:"solid"},render:args=>({props:args,template:'<svg [faIcon]="icon" [type]="type" height="1em"></svg>'})}}}]);